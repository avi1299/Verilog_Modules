$date
	Mon Nov  2 01:08:19 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var reg 1 ! CLK $end
$var reg 4 " LD_A [3:0] $end
$var reg 4 # LD_B [3:0] $end
$var reg 1 $ shift_control $end
$scope module SA $end
$var wire 1 ! CLK $end
$var wire 4 % LD_A [3:0] $end
$var wire 4 & LD_B [3:0] $end
$var wire 1 $ shift_control $end
$var wire 1 ' w $end
$var wire 1 ( sum $end
$var wire 1 ) soB $end
$var wire 1 * soA $end
$var wire 1 + cout_temp $end
$var wire 1 , cin $end
$scope module A $end
$var wire 1 ! CLK $end
$var wire 1 $ EN $end
$var wire 4 - LD_VAL [3:0] $end
$var wire 1 ( in $end
$var reg 4 . Q [3:0] $end
$var reg 1 * SO $end
$upscope $end
$scope module B $end
$var wire 1 ! CLK $end
$var wire 1 $ EN $end
$var wire 4 / LD_VAL [3:0] $end
$var wire 1 0 in $end
$var reg 4 1 Q [3:0] $end
$var reg 1 ) SO $end
$upscope $end
$scope module D $end
$var wire 1 2 CLEAR $end
$var wire 1 ' CLK $end
$var wire 1 + D $end
$var reg 1 , Q $end
$upscope $end
$scope module FA $end
$var wire 1 * A $end
$var wire 1 ) B $end
$var wire 1 , CARRY_IN $end
$var wire 1 + CARRY_OUT $end
$var wire 1 ( SUM $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
02
bx 1
00
b111 /
bx .
b111 -
x,
x+
x*
x)
x(
0'
b111 &
b111 %
1$
b111 #
b111 "
0!
$end
#1
1+
0(
0,
1)
b111 1
1*
b111 .
#2
1(
1,
1'
b11 .
b11 1
1!
#4
0'
0!
#6
1'
b1 1
b1001 .
1!
#8
0'
0!
#10
1'
b1100 .
b0 1
1!
#12
0'
0!
#14
0+
1'
0)
b1110 .
0*
1!
#16
0'
0!
#18
0(
0,
1'
b1111 .
1!
#20
0'
0!
